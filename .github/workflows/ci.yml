name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Fast checks that run in parallel
  fast-checks:
    name: Fast Checks
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        check: [format, clippy]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      # Conditional steps based on the check type
      - name: Check formatting
        if: matrix.check == 'format'
        run: cargo fmt --all -- --check

      - name: Run clippy
        if: matrix.check == 'clippy'
        run: cargo clippy -- -D warnings

  # Tests can run in parallel with the fast-checks
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo nextest run

  # Build job depends on both fast-checks and test
  build:
    name: Build
    needs: [fast-checks, test]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Build release
        run: cargo build --release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: twig-ubuntu
          path: target/release/twig
