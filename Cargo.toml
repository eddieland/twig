[workspace]
members = [
    "no-worries",
    "twig-cli",
    "twig-core",
    "twig-gh",
    "twig-jira",
    "twig-test-utils",
]
exclude = [
    "/.github",
    "/.twig",
    "/ref",
    "/examples",
]
default-members = ["twig-cli"]
resolver = "2"

[workspace.package]
version = "0.2.0"
edition = "2024"
rust-version = "1.88.0"
authors = ["Edward Jones <e@eddie.land>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/eddieland/twig"
homepage = "https://github.com/eddieland/twig"
description = "A Git-based developer productivity tool that enhances workflows by integrating git repository management with Jira issue tracking and GitHub pull request workflows"
keywords = ["git", "productivity", "jira", "github", "cli"]
categories = ["command-line-utilities", "development-tools"]

[package]
name = "twig"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
twig-cli = { path = "twig-cli" }

[dev-dependencies]
twig-test-utils = { path = "twig-test-utils" }
twig-core = { path = "twig-core" }
anyhow = { workspace = true }
git2 = { workspace = true }
tempfile = { workspace = true }

[workspace.dependencies]
# Core dependencies
anyhow = "1.0"
chrono = { version = "0.4", features = ["serde"] }
directories = "6.0"
git2 = { version = "0.20", features = ["https"] }
open = "5.3"
regex = "1.11"
thiserror = "2"

# CLI and UI dependencies
clap = { version = "4.5", features = ["derive"] }
clap_complete = "4.5"
console = "0.15.11"
dialoguer = "0.11.0"
emojis = "0.6"
indicatif = "0.17"
owo-colors = { version = "4.2", features = ["supports-colors"] }
tabled = "0.20"

# Interactive UI
skim = "0.18"
ratatui = "0.29"
crossterm = "0.29"
nucleo = "0.5"

# Tracing and logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }

# Async and networking
reqwest = { version = "0.12", features = ["json", "native-tls"], default-features = false }
tokio = { version = "1.47", features = ["rt", "rt-multi-thread", "time", "macros"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.9"
url = "2.5"
uuid = { version = "1.18", features = ["v4", "serde"] }

# Windows-specific dependencies
wincredentials = "0.2"

# Testing dependencies
insta = "1.43"
tempfile = "3.8"
wiremock = "0.6.5"

[target.'cfg(windows)'.dependencies]
# Platform-specific git2 features for Windows
git2 = { version = "0.20", features = ["vendored-openssl"] }

[profile.release]
opt-level = 2
lto = true # Enable Link Time Optimization
codegen-units = 1 # Reduce parallel code generation units to increase optimization

# Fast profile for Windows CI test builds - prioritizes speed over optimization
[profile.ci-windows]
inherits = "dev"
opt-level = 0          # No optimization for fastest compilation
lto = false            # No LTO for fastest compilation
codegen-units = 256    # Maximum parallel compilation
debug = false          # No debug info to keep artifacts small

# Optimized profile for Windows release builds
[profile.release-windows]
inherits = "release"
opt-level = 1          # Reduce from 2 to 1 for faster compilation
lto = "thin"           # Use thin LTO instead of full LTO
codegen-units = 16     # Increase from 1 to enable parallel compilation
debug = false          # Ensure no debug info
